{"version":3,"sources":["lib/UseRouter.js","components/PageStyles.js","components/presentation/ContentMarkup.js","components/Content.js","containers/Home.js","components/presentation/Button.js","components/ContactForm.js","containers/Contact.js","containers/Navigation.js","serviceWorker.js","index.js","App.js","images/flipside-logo.svg"],"names":["useRouter","useContext","__RouterContext","PageStyles","position","height","width","overflowY","ContentMarkup","props","className","data-uk-grid","data-uk-height-viewport","data-uk-scrollspy","href","Content","location","style","pathname","Home","Button","children","type","size","format","getSchema","Yup","shape","name","required","email","comment","ContactForm","handleSubmit","data","body","console","log","initialValues","validationSchema","onSubmit","this","render","handleChange","handleBlur","values","errors","touched","isSubmitting","validateForm","htmlFor","onChange","onBlur","value","label","placeholder","component","rows","disabled","Component","Contact","NavBar","data-uk-sticky","data-uk-navbar","src","logo","alt","data-uk-image","to","data-uk-icon","Boolean","window","hostname","match","basename","process","useTransition","from","opacity","transform","enter","leave","map","item","key","div","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.07525005.chunk.js","sourcesContent":["import { useContext } from 'react';\nimport { __RouterContext } from 'react-router-dom';\n\nconst useRouter = () => {\n  return useContext(__RouterContext);\n};\n\nexport default useRouter;\n","const PageStyles = {\n    position: \"absolute\",\n    height: \"100vh\",\n    width: \"100vw\",\n    overflowY: \"scroll\"\n}\n\nexport default PageStyles;\n","import React from \"react\";\n\nconst ContentMarkup = props =>\n        <div className=\"uk-container uk-container-small\">\n            <div className=\"uk-grid-collapse uk-flex-center uk-flex-middle uk-height-viewport\" data-uk-grid data-uk-height-viewport=\"min-height: 640;\" data-uk-scrollspy=\"target: div > *; cls: uk-animation-slide-bottom-small; delay: 150\">\n                <div className=\"uk-card uk-card-default uk-box-shadow-medium uk-box-shadow-hover-xlarge\">\n                    <div className=\"uk-padding-remove uk-card-body uk-grid-collapse uk-child-width-1-2@s\" data-uk-grid>\n                        <div className=\"uk-flex uk-flex-middle uk-background-primary uk-light uk-padding-large\">\n                            <h2>Succeeding with the over 50s is the fastest growth hack available to any consumer driven business</h2>\n                        </div>\n                        <div className=\"uk-flex uk-flex-middle uk-padding-large\">\n                            <div>\n                                <p>People over 50 hold 80% of the wealth and 70% of the income in the United States but are the target of only 5% of marketing spend</p>\n                                <p>And they are starting life all over again</p>\n                                <p>If you want to be a first mover, if you want find out how your brand can be the first choice for the wealthiest and most dynamic demographic in America email us at <a href=\"mailto:chris@flipside.global?subject=Contact from Flipside web site\">chris@flipside.global</a></p>\n                                <p>Discover success on the Flipside.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\nexport default ContentMarkup;\n","import React from \"react\";\nimport useRouter from \"../lib/UseRouter\";\nimport PageStyles from \"./PageStyles\";\nimport ContentMarkup from \"./presentation/ContentMarkup\";\n\nconst Content = props => {\n    const { location } = useRouter();\n    return (\n        <div style={location.pathname !== '/' ? PageStyles : null} className=\"brand-background\">\n            <ContentMarkup />\n        </div>\n    )\n}\nexport default Content;\n","import React from \"react\";\nimport Content from \"../components/Content\";\nimport PageStyles from \"../components/PageStyles\";\n\nconst Home = props =>\n    <div style={PageStyles}>\n        <Content />\n    </div>\n\nexport default Home;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Button = ({children, ...props}) =>\n    <button type={props.type} className={`uk-button uk-button-${props.size} uk-button-${props.format} uk-border-rounded`}>{children}</button>\n\nexport const AnchorButton = ({children, ...props}) =>\n    <NavLink to={props.path} className={`uk-button uk-button-${props.size} uk-button-${props.format} uk-border-rounded`}>{children}</NavLink>\n","import React, { Component } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button } from \"./presentation/Button\";\nimport * as Yup from \"yup\";\n\nconst getSchema = () => Yup.object().shape({\n    name: Yup.string()\n        .required('Please enter your first name'),\n    email: Yup.string()\n        .email('Please enter a valid email address')\n        .required('Please enter your email address'),\n    comment: Yup.string()\n        .required('Please enter your message'),\n});\n\nclass ContactForm extends Component {\n\n    handleSubmit = data => {\n        const body = {\n                name: data.name,\n                email: data.email,\n                comment: data.comment\n            };\n        console.log(\"FORM SUBMIT\", body)\n    }\n\n    render() {\n        return (\n            <Formik\n                initialValues={{\n                    name: \"\",\n                    email: \"\",\n                    comment: \"\"\n                }}\n                validationSchema={getSchema}\n                onSubmit={this.handleSubmit}\n                render={({ handleChange, handleBlur, values, errors, touched, isSubmitting, validateForm }) => (\n                    <Form>\n                        <fieldset className=\"uk-fieldset\">\n                            <div className=\"\">\n                                <label htmlFor=\"name\" className=\"uk-text-muted\">Name\n                                    <Field\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.name}\n                                        name=\"name\"\n                                        label={errors.name && touched.name ? errors.name : \"First name\"}\n                                        placeholder={errors.name && touched.name && errors.name}\n                                        className={`uk-input uk-border-rounded ${errors.name && touched.name ? \"uk-form-danger\" : \"uk-form\"}`}\n                                        required\n                                    />\n                                </label>\n                            </div>\n                            <div className=\"uk-margin-small-top\">\n                                <label htmlFor=\"email\" className=\"uk-text-muted\">Email address\n                                    <Field\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.email}\n                                        name=\"email\"\n                                        label=\"Email address\"\n                                        placeholder={errors.email && touched.email && errors.email}\n                                        className={`uk-input uk-border-rounded ${errors.email && touched.email ? \"uk-form-danger\" : \"uk-form\"}`}\n                                        required\n                                    />\n                                </label>\n                            </div>\n\n                            <div className=\"uk-margin-small-top\">\n                                <label htmlFor=\"comment\" className=\"uk-text-muted\">Your message\n                                <Field\n                                    component=\"textarea\"\n                                    name=\"comment\"\n                                    label={errors.comment && touched.comment ? errors.comment : \"Your message\"}\n                                    placeholder={errors.comment && touched.comment && errors.comment}\n                                    rows=\"4\"\n                                    className={`uk-textarea uk-border-rounded ${errors.comment && touched.comment ? \"uk-form-danger\" : null}`}\n                                    required\n                                />\n                                </label>\n                            </div>\n\n                            <div className=\"uk-margin-medium-top uk-text-right\">\n                                <Button type=\"submit\" size=\"large\" format=\"primary\" disabled={isSubmitting}>Submit</Button>\n                            </div>\n                        </fieldset>\n                    </Form>\n                )}\n            />\n        )\n    }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport ContactForm from \"../components/ContactForm\";\nimport PageStyles from \"../components/PageStyles\";\nimport useRouter from \"../lib/UseRouter\";\n\nconst Contact = props => {\n        const { location } = useRouter();\n        return (\n            <section style={location.pathname !== '/' ? PageStyles : null} className=\"uk-section uk-section-primary uk-light uk-padding-remove-bottom\">\n    \t\t\t<div className=\"uk-container uk-container-small uk-margin-large-top\">\n                    <h2 className=\"uk-text-center uk-margin-large-top\">Get in touch</h2>\n                    <p className=\"uk-align-center uk-text-center uk-width-1-2@s uk-margin-large-bottom\">\n                        Lorem ipsum dolor sit amet.\n                    </p>\n    \t\t\t\t<div className=\"uk-container uk-container-small\">\n                        <div>\n                            <ContactForm />\n                        </div>\n    \t\t\t\t</div>\n    \t\t\t</div>\n    \t\t</section>\n        )\n    }\n\nexport default Contact;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport useRouter from \"../lib/UseRouter\";\n\nimport logo from '../images/flipside-logo.svg';\n\nconst NavBar = () => {\n    const {location} = useRouter();\n    return (\n        <div className=\"nav\" data-uk-sticky=\"cls-active: uk-background-secondary uk-light; top: 5vh; animation: uk-animation-fade\">\n    \t\t<div className=\"uk-container uk-container-small\">\n    \t\t\t<nav className=\"uk-navbar uk-navbar-container uk-navbar-transparent\" data-uk-navbar>\n    \t\t\t\t<div className=\"uk-navbar-left\">\n    \t\t\t\t\t<div className=\"uk-navbar-item\">\n                            {location.pathname === '/' ?\n                            <img src={logo} width=\"75px\" alt=\"Flipside Logo\" data-uk-image />\n                            : <NavLink to={`/`}><img src={logo} width=\"75px\" alt=\"Flipside Logo\" data-uk-image /></NavLink>\n                            }\n    \t\t\t\t\t</div>\n    \t\t\t\t</div>\n                    {location.pathname !== '/contact' &&\n                    <div className=\"uk-navbar-right\">\n                        <ul className=\"uk-navbar-nav\">\n                            <li>\n                                <NavLink to={`/contact`}><span className=\"uk-icon uk-margin-small-right\" data-uk-icon=\"icon: commenting; ratio: 0.85\"></span> Contact</NavLink>\n                            </li>\n                        </ul>\n    \t\t\t\t</div>\n                    }\n                    {location.pathname !== '/' &&\n                    <div className=\"uk-navbar-right\">\n                        <ul className=\"uk-navbar-nav\">\n                            <li>\n                                <NavLink to={`/`}>\n                                    <span className=\"uk-icon uk-margin-small-right\" data-uk-icon=\"icon: home; ratio: 0.85\"></span> Home</NavLink>\n                            </li>\n                        </ul>\n    \t\t\t\t</div>\n                    }\n    \t\t\t</nav>\n    \t\t</div>\n    \t</div>\n    )\n}\n\nexport default NavBar;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport {render} from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport NavBar from \"./containers/Navigation\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nrender (\n    <Router basename={process.env.PUBLIC_URL}>\n        <NavBar />\n        <App />\n    </Router>, document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport {useTransition, animated} from \"react-spring\";\nimport useRouter from \"./lib/UseRouter\";\n\nimport Home from \"./containers/Home\";\nimport Contact from \"./containers/Contact\";\n\nimport './css/normalize.css';\nimport './css/Main.css';\nimport './css/App.css';\n\nexport default function App() {\n    const {location} = useRouter();\n\n\tconst transitions = useTransition(location, location => location.pathname, {\n        from: { opacity: 0, transform: 'translate3d(0, 80vh, 0)' },\n        enter: { opacity: 1, transform: 'translate3d(0, 0, 0)' },\n        leave: { opacity: 0, transform: 'translate3d(0, -50vh, 0)' },\n\t});\n\n    return transitions.map(({item, props, key}) => (\n        <animated.div key={key} style={props}>\n            <Switch location={item}>\n                <Route path=\"/contact\" component={(Contact)} />\n                <Route path=\"/\" component={(Home)} />\n            </Switch>\n        </animated.div>\n    )\n)};\n","module.exports = __webpack_public_path__ + \"static/media/flipside-logo.8601b15a.svg\";"],"sourceRoot":""}